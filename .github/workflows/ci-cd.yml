name: Node CI/CD

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Run build script
        run: npm run build

      - name: Log in to Docker Hub
        run: echo "${{secrets.DOCKER_TOKEN}}" | docker login -u "${{secrets.DOCKER_USERNAME}}" --password-stdin

      - name: Generate Docker image tags
        id: tag
        run: |
          echo "IMAGE_TAG=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "BRANCH_TAG=$(echo ${GITHUB_REF##*/})" >> $GITHUB_ENV

      - name: Build Docker image
        run: |
          docker build -t ${{secrets.DOCKER_USERNAME}}/nodeapp:${{env.IMAGE_TAG}} .
          docker tag ${{ secrets.DOCKER_USERNAME }}/nodeapp:${{env.IMAGE_TAG}} ${{secrets.DOCKER_USERNAME}}/nodeapp:${{env.BRANCH_TAG}}

      - name: Push Docker image
        run: |
          docker push ${{secrets.DOCKER_USERNAME}}/nodeapp:${{env.IMAGE_TAG}}
          docker push ${{secrets.DOCKER_USERNAME}}/nodeapp:${{env.BRANCH_TAG}}

      - name: Decode SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY_B64 }}" | base64 -d > ec2-key.pem
          chmod 600 ec2-key.pem

      - name: Copy files to EC2
        run: |
          rsync -avz \
          -e "ssh -i ec2-key.pem -o StrictHostKeyChecking=no" \
          ./ \
          ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/nodeapp

      - name: Run app on EC2 (in Docker)
        run: |
          ssh -i ec2-key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          if ! command -v docker &> /dev/null; then
            curl -fsSL https://get.docker.com | sudo bash
            sudo usermod -aG docker $USER
            newgrp docker
          fi

          docker pull ${{ secrets.DOCKER_USERNAME }}/nodeapp:${{ env.IMAGE_TAG }}
          docker rm -f nodeapp || true
          docker run -d --name nodeapp -p 3000:3000 ${{ secrets.DOCKER_USERNAME }}/nodeapp:${{ env.IMAGE_TAG }}
          EOF


          